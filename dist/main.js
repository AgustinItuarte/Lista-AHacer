(()=>{"use strict";var e={426:(e,n,r)=>{r.d(n,{Z:()=>i});var t=r(537),o=r.n(t),a=r(645),c=r.n(a)()(o());c.push([e.id,"html,\r\nbody {\r\n    max-width: 100%;\r\n    overflow-x: hidden;\r\n}\r\n\r\n* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    font-size: 1.5rem;\r\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    background-color: #cbd5e1;\r\n}\r\n\r\nheader {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: start;\r\n    height: 15vh;\r\n    padding: 20px;\r\n}\r\n\r\n#contenido {\r\n    display: grid;\r\n    grid-template-columns: 20% 80%;\r\n    height: 79vh;\r\n    width: 100vw;\r\n}\r\n\r\nfooter {\r\n    height: 6vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\nheader, footer {\r\n    background-color: #1e293b;\r\n    color: #f8fafc;\r\n}\r\n\r\n.sidebar {\r\n    background-color: #64748b;\r\n}\r\n\r\n.main-content {\r\n    background-color: #cbd5e1;\r\n}\r\n\r\n.contenedor-tareas {\r\n\r\n}\r\n\r\n.sidebar,\r\n.main-content,\r\n.contenedor-tareas {\r\n    padding: 50px;\r\n}\r\n\r\nli:hover {\r\n    cursor: pointer;\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;IAEI,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,iBAAiB;IACjB,sHAAsH;IACtH,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;;AAEA;;AAEA;;;IAGI,aAAa;AACjB;;AAEA;IACI,eAAe;AACnB",sourcesContent:["html,\r\nbody {\r\n    max-width: 100%;\r\n    overflow-x: hidden;\r\n}\r\n\r\n* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    font-size: 1.5rem;\r\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    background-color: #cbd5e1;\r\n}\r\n\r\nheader {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: start;\r\n    height: 15vh;\r\n    padding: 20px;\r\n}\r\n\r\n#contenido {\r\n    display: grid;\r\n    grid-template-columns: 20% 80%;\r\n    height: 79vh;\r\n    width: 100vw;\r\n}\r\n\r\nfooter {\r\n    height: 6vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\nheader, footer {\r\n    background-color: #1e293b;\r\n    color: #f8fafc;\r\n}\r\n\r\n.sidebar {\r\n    background-color: #64748b;\r\n}\r\n\r\n.main-content {\r\n    background-color: #cbd5e1;\r\n}\r\n\r\n.contenedor-tareas {\r\n\r\n}\r\n\r\n.sidebar,\r\n.main-content,\r\n.contenedor-tareas {\r\n    padding: 50px;\r\n}\r\n\r\nli:hover {\r\n    cursor: pointer;\r\n}"],sourceRoot:""}]);const i=c},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var r="",t=void 0!==n[5];return n[4]&&(r+="@supports (".concat(n[4],") {")),n[2]&&(r+="@media ".concat(n[2]," {")),t&&(r+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),r+=e(n),t&&(r+="}"),n[2]&&(r+="}"),n[4]&&(r+="}"),r})).join("")},n.i=function(e,r,t,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(t)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(c[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);t&&c[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],r=e[3];if(!r)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function r(e){for(var r=-1,t=0;t<n.length;t++)if(n[t].identifier===e){r=t;break}return r}function t(e,t){for(var a={},c=[],i=0;i<e.length;i++){var s=e[i],d=t.base?s[0]+t.base:s[0],l=a[d]||0,u="".concat(d," ").concat(l);a[d]=l+1;var A=r(u),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)n[A].references++,n[A].updater(p);else{var f=o(p,t);t.byIndex=i,n.splice(i,0,{identifier:u,updater:f,references:1})}c.push(u)}return c}function o(e,n){var r=n.domAPI(n);return r.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;r.update(e=n)}else r.remove()}}e.exports=function(e,o){var a=t(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var i=r(a[c]);n[i].references--}for(var s=t(e,o),d=0;d<a.length;d++){var l=r(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=s}}},569:e=>{var n={};e.exports=function(e,r){var t=function(e){if(void 0===n[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}n[e]=r}return n[e]}(e);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,r)=>{e.exports=function(e){var n=r.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(r){!function(e,n,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(t,e,n.options)}(n,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function r(t){var o=n[t];if(void 0!==o)return o.exports;var a=n[t]={id:t,exports:{}};return e[t](a,a.exports,r),a.exports}r.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return r.d(n,{a:n}),n},r.d=(e,n)=>{for(var t in n)r.o(n,t)&&!r.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},r.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r.nc=void 0,(()=>{var e=r(379),n=r.n(e),t=r(795),o=r.n(t),a=r(569),c=r.n(a),i=r(565),s=r.n(i),d=r(216),l=r.n(d),u=r(589),A=r.n(u),p=r(426),f={};f.styleTagTransform=A(),f.setAttributes=s(),f.insert=c().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=l(),n()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;class m{constructor(e,n){this.titulo=e,this.id=n}}!function(){let e=JSON.parse(localStorage.getItem("proyectos"));null==e&&(e=[]);const n=document.querySelector("ul");let r=0;e.forEach((e=>{let t=document.createElement("li");n.appendChild(t),t.textContent=e,t.dataset.id=r,t.className="proyecto",r++}))}();const h=document.querySelector(".btn-a単adirP"),v=document.querySelector(".btn-aceptar"),y=document.querySelector(".btn-cancelar"),g=document.querySelector(".form-proyecto");h.addEventListener("click",(()=>{g.hidden=!1,h.hidden=!0})),document.addEventListener("click",(function(e){const n=e.target;if(n.classList.contains("proyecto")){const e=document.querySelector(".contenedor-tareas"),r=document.querySelector("#contenido"),t=document.createElement("div"),o=document.createElement("h2"),a=document.createElement("button"),c=n.dataset.id;e.remove(),o.innerHTML=n.textContent,a.innerHTML="+ A単adir Tarea",r.appendChild(t),t.appendChild(o),t.appendChild(a),t.className="contenedor-tareas",a.className="btn-a単adir-tarea",document.querySelector(".contenedor-tareas").dataset.id=c,o.dataset.id=c,a.dataset.id=c}})),document.addEventListener("click",(function(e){const n=e.target;if(n.classList.contains("btn-a単adir-tarea")){let e=new m("Cocinar",n.dataset.id),r=JSON.parse(localStorage.getItem("tareas"));null==r&&(r=[]),r.push(e),localStorage.setItem("tareas",JSON.stringify(r))}})),document.addEventListener("click",(function(e){const n=e.target;let r=JSON.parse(localStorage.getItem("tareas")),t=document.querySelector(".contenedor-tareas");n.classList.contains("proyecto")&&(r.forEach((e=>{if(e.id===t.dataset.id){let n=document.createElement("div"),r=document.createElement("h4");r.textContent=e.titulo,n.appendChild(r),t.appendChild(n)}})),console.log(r))})),y.addEventListener("click",(function(e){e.preventDefault(),g.hidden=!0,h.hidden=!1,g.elements[0].value=""})),v.addEventListener("click",(function(e){e.preventDefault(),function(){let e=JSON.parse(localStorage.getItem("proyectos"));null==e&&(e=[]);const n=document.querySelector(".form-proyecto");let r=e.length-1;const t=document.querySelector("ul"),o=document.createElement("li");o.dataset.id=`${r+1}`,o.className="proyecto",o.textContent=n.elements[0].value,e.push(o.textContent),t.appendChild(o),localStorage.setItem("proyectos",JSON.stringify(e))}(),g.hidden=!0,h.hidden=!1,g.elements[0].value=""}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,