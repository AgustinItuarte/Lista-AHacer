(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([e.id,"html,\r\nbody {\r\n    max-width: 100%;\r\n    overflow-x: hidden;\r\n}\r\n\r\n* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    font-size: 1.5rem;\r\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    background-color: #cbd5e1;\r\n}\r\n\r\nheader {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: start;\r\n    height: 15vh;\r\n    padding: 20px;\r\n}\r\n\r\n#contenido {\r\n    display: grid;\r\n    grid-template-columns: 20% 80%;\r\n    height: 79vh;\r\n    width: 100vw;\r\n}\r\n\r\nfooter {\r\n    height: 6vh;\r\n    font-size: 0.9rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\nheader, footer {\r\n    background-color: #1e293b;\r\n    color: #f8fafc;\r\n}\r\n\r\n.sidebar {\r\n    background-color: #64748b;\r\n}\r\n\r\n.total-tareas {\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n}\r\n\r\nul {\r\n    cursor: default;\r\n}\r\n\r\nul li {\r\n    list-style: none;\r\n    padding-left: 14px;\r\n}\r\n\r\n.main-content {\r\n    background-color: #cbd5e1;\r\n}\r\n\r\n.contenedor-tareas {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    overflow: auto;\r\n}\r\n\r\n.tareas {\r\n    background-color: #94a3b8;\r\n    height: fit-content;\r\n    cursor: pointer;\r\n}\r\n\r\n.btn-añadir-tarea {\r\n    width: fit-content;\r\n}\r\n\r\n.form-añadir-tarea {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #64748b;\r\n    padding: 10px;\r\n}\r\n\r\ninput, label,\r\ntextarea {\r\n    display: block;\r\n    width: 100%;\r\n}\r\n\r\ninput {\r\n    height: 30px;\r\n}\r\n\r\ntextarea {\r\n    height: 90px;\r\n}\r\n\r\nbutton {\r\n    width: fit-content;\r\n    height: 30px;\r\n}\r\n\r\n.sidebar,\r\n.main-content,\r\n.contenedor-tareas {\r\n    padding: 50px;\r\n}\r\n\r\nli:hover {\r\n    cursor: pointer;\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;IAEI,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,iBAAiB;IACjB,sHAAsH;IACtH,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,cAAc;AAClB;;AAEA;IACI,yBAAyB;IACzB,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,yBAAyB;IACzB,aAAa;AACjB;;AAEA;;IAEI,cAAc;IACd,WAAW;AACf;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,YAAY;AAChB;;AAEA;;;IAGI,aAAa;AACjB;;AAEA;IACI,eAAe;AACnB",sourcesContent:["html,\r\nbody {\r\n    max-width: 100%;\r\n    overflow-x: hidden;\r\n}\r\n\r\n* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    font-size: 1.5rem;\r\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    background-color: #cbd5e1;\r\n}\r\n\r\nheader {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: start;\r\n    height: 15vh;\r\n    padding: 20px;\r\n}\r\n\r\n#contenido {\r\n    display: grid;\r\n    grid-template-columns: 20% 80%;\r\n    height: 79vh;\r\n    width: 100vw;\r\n}\r\n\r\nfooter {\r\n    height: 6vh;\r\n    font-size: 0.9rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\nheader, footer {\r\n    background-color: #1e293b;\r\n    color: #f8fafc;\r\n}\r\n\r\n.sidebar {\r\n    background-color: #64748b;\r\n}\r\n\r\n.total-tareas {\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n}\r\n\r\nul {\r\n    cursor: default;\r\n}\r\n\r\nul li {\r\n    list-style: none;\r\n    padding-left: 14px;\r\n}\r\n\r\n.main-content {\r\n    background-color: #cbd5e1;\r\n}\r\n\r\n.contenedor-tareas {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    overflow: auto;\r\n}\r\n\r\n.tareas {\r\n    background-color: #94a3b8;\r\n    height: fit-content;\r\n    cursor: pointer;\r\n}\r\n\r\n.btn-añadir-tarea {\r\n    width: fit-content;\r\n}\r\n\r\n.form-añadir-tarea {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #64748b;\r\n    padding: 10px;\r\n}\r\n\r\ninput, label,\r\ntextarea {\r\n    display: block;\r\n    width: 100%;\r\n}\r\n\r\ninput {\r\n    height: 30px;\r\n}\r\n\r\ntextarea {\r\n    height: 90px;\r\n}\r\n\r\nbutton {\r\n    width: fit-content;\r\n    height: 30px;\r\n}\r\n\r\n.sidebar,\r\n.main-content,\r\n.contenedor-tareas {\r\n    padding: 50px;\r\n}\r\n\r\nli:hover {\r\n    cursor: pointer;\r\n}"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],c=0;c<e.length;c++){var s=e[c],d=r.base?s[0]+r.base:s[0],l=o[d]||0,A="".concat(d," ").concat(l);o[d]=l+1;var u=t(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=a(p,r);r.byIndex=c,n.splice(c,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var c=t(o[i]);n[c].references--}for(var s=r(e,a),d=0;d<o.length;d++){var l=t(o[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),a=t.n(r),o=t(569),i=t.n(o),c=t(565),s=t.n(c),d=t(216),l=t.n(d),A=t(589),u=t.n(A),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=l(),n()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;class f{constructor(e,n,t,r,a,o){this.titulo=e,this.detalles=n,this.finFecha=t,this.prioridad=r,this.id=a,this.posicion=o}}!function(){let e=JSON.parse(localStorage.getItem("proyectos"));null==e&&(e=[]);const n=document.querySelector("ul");let t=0;e.forEach((e=>{let r=document.createElement("li");n.appendChild(r),r.textContent=e,r.dataset.id=t,r.className="proyecto",t++}))}();const h=document.querySelector(".btn-añadirP"),C=document.querySelector(".btn-aceptar1"),g=document.querySelector(".btn-cancelar1"),y=document.querySelector(".form-proyecto");h.addEventListener("click",(()=>{y.hidden=!1,h.hidden=!0})),document.addEventListener("click",(function(e){const n=e.target;if(n.classList.contains("btn-aceptar")){const e=document.querySelector(".form-añadir-tarea");let t=e.elements[0].value,r=e.elements[1].value,a=e.elements[2].value,o=e.elements[3].value,i=new f(t,r,a,o,n.dataset.id),c=JSON.parse(localStorage.getItem("tareas"));null==c&&(c=[]),c.push(i);let s=c.length-1;i.posicion=s,localStorage.setItem("tareas",JSON.stringify(c))}})),document.addEventListener("click",(function(e){let n=e.target;if(n.classList.contains("borrar-tarea")){let e=JSON.parse(localStorage.getItem("tareas"));null==e&&(e=[]),e[n.dataset.posicion]="",localStorage.setItem("tareas",JSON.stringify(e))}})),document.addEventListener("click",(function(e){const n=e.target;if(n.classList.contains("proyecto")||n.classList.contains("btn-aceptar")||n.classList.contains("borrar-tarea")||n.classList.contains("total-tareas")){const e=document.querySelector(".contenedor-tareas"),t=document.querySelector("#contenido"),r=document.createElement("div");if(n.classList.contains("btn-aceptar")){const e=document.querySelector("h2");r.appendChild(e)}if(n.classList.contains("borrar-tarea")){const e=document.querySelector("h2");r.appendChild(e)}if(n.classList.contains("proyecto")){const e=document.createElement("h2");e.innerHTML=n.textContent,r.appendChild(e)}if(n.classList.contains("total-tareas")){const e=document.createElement("h2");e.innerHTML="Tareas",r.appendChild(e)}const a=document.createElement("button"),o=n.dataset.id,i=document.createElement("form"),c=document.createElement("label"),s=document.createElement("label"),d=document.createElement("label"),l=document.createElement("input"),A=document.createElement("textarea"),u=document.createElement("input"),p=document.createElement("button"),m=document.createElement("button"),f=document.createElement("div"),h=document.createElement("select");!function(e){const n=["Baja","Media","Alta"];for(let t=0;t<n.length;t++){const r=document.createElement("option");r.value=n[t],r.text=n[t],e.appendChild(r)}}(h),e.remove(),a.innerHTML="+ Añadir Tarea",c.textContent="Titulo:",s.textContent="Detalles:",d.textContent="Fecha:",p.textContent="Aceptar",m.textContent="Cancelar",t.appendChild(r),r.appendChild(a),r.appendChild(i),i.appendChild(c),i.appendChild(l),i.appendChild(s),i.appendChild(A),i.appendChild(d),i.appendChild(u),i.appendChild(h),i.appendChild(f),f.appendChild(p),f.appendChild(m),r.className="contenedor-tareas",a.className="btn-añadir-tarea",i.className="form-añadir-tarea",l.id="titulo-tarea",c.htmlFor=l.id,p.className="btn-aceptar",m.className="btn-cancelar";let C=document.querySelector(".contenedor-tareas");C.dataset.id=o,nom_proyecto.dataset.id=o,a.dataset.id=o,p.dataset.id=o,i.style.display="none",i.action="post",l.name="titulo-tarea",l.type="text",u.type="date",n.classList.contains("total-tareas")&&(a.remove(),C.dataset.id="tareas"),n.classList.contains("borrar-tarea")&&"tareas"===C.dataset.id&&(a.remove(),C.dataset.id="tareas")}})),document.addEventListener("click",(function(e){const n=e.target;let t=JSON.parse(localStorage.getItem("tareas"));null==t&&(t=[]);let r=document.querySelector(".contenedor-tareas");(n.classList.contains("proyecto")||n.classList.contains("btn-aceptar")||n.classList.contains("borrar-tarea")||n.classList.contains("total-tareas"))&&t.forEach((e=>{if((e.id===r.dataset.id||n.classList.contains("total-tareas")||"tareas"===n.dataset.id)&&""!==e){let t=document.createElement("div"),a=document.createElement("div"),o=document.createElement("div");t.className="tareas",a.className="borrar-tarea",o.className="editar_tarea";let i=document.createElement("div"),c=document.createElement("div"),s=document.createElement("div"),d=document.createElement("div");"Baja"===e.prioridad&&(d.style.backgroundColor="green"),"Media"===e.prioridad&&(d.style.backgroundColor="yellow"),"Alta"===e.prioridad&&(d.style.backgroundColor="red"),i.textContent=e.titulo,c.textContent=e.detalles,s.textContent=e.finFecha,d.textContent=e.prioridad,t.dataset.posicion=e.posicion,a.dataset.posicion=e.posicion,o.dataset.posicion=e.posicion,n.classList.contains("total-tareas")?a.dataset.id="tareas":a.dataset.id=e.id,a.textContent="Borrar",o.textContent="Editar",t.appendChild(i),t.appendChild(c),t.appendChild(s),t.appendChild(d),t.appendChild(a),t.appendChild(o),r.appendChild(t)}})),console.log(t)})),document.addEventListener("click",(function(e){e.preventDefault();let n=e.target;const t=document.querySelector(".form-añadir-tarea");n.classList.contains("btn-añadir-tarea")&&(t.style.display="block")})),document.addEventListener("click",(function(e){e.preventDefault();let n=e.target;const t=document.querySelector(".form-añadir-tarea");n.classList.contains("btn-cancelar")&&(t.style.display="none")})),g.addEventListener("click",(function(e){e.preventDefault(),y.hidden=!0,h.hidden=!1,y.elements[0].value=""})),C.addEventListener("click",(function(e){e.preventDefault(),function(){let e=JSON.parse(localStorage.getItem("proyectos"));null==e&&(e=[]);const n=document.querySelector(".form-proyecto");let t=e.length-1;const r=document.querySelector("ul"),a=document.createElement("li");a.dataset.id=`${t+1}`,a.className="proyecto",a.textContent=n.elements[0].value,e.push(a.textContent),r.appendChild(a),localStorage.setItem("proyectos",JSON.stringify(e))}(),y.hidden=!0,h.hidden=!1,y.elements[0].value=""}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,