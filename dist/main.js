(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([e.id,"html,\r\nbody {\r\n    max-width: 100%;\r\n    overflow-x: hidden;\r\n}\r\n\r\n* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    font-size: 1.5rem;\r\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    background-color: #cbd5e1;\r\n}\r\n\r\nheader {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: start;\r\n    height: 15vh;\r\n    padding: 20px;\r\n}\r\n\r\n#contenido {\r\n    display: grid;\r\n    grid-template-columns: 20% 80%;\r\n    height: 79vh;\r\n    width: 100vw;\r\n}\r\n\r\nfooter {\r\n    height: 6vh;\r\n    font-size: 0.9rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\nheader, footer {\r\n    background-color: #1e293b;\r\n    color: #f8fafc;\r\n}\r\n\r\n.sidebar {\r\n    background-color: #64748b;\r\n}\r\n\r\n.total-tareas {\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n}\r\n\r\nul {\r\n    cursor: default;\r\n}\r\n\r\nul li {\r\n    list-style: none;\r\n    padding-left: 14px;\r\n}\r\n\r\n.main-content {\r\n    background-color: #cbd5e1;\r\n}\r\n\r\n.contenedor-tareas {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    overflow: auto;\r\n}\r\n\r\n.tareas {\r\n    background-color: #94a3b8;\r\n    height: fit-content;\r\n    cursor: pointer;\r\n}\r\n\r\n.btn-añadir-tarea {\r\n    width: fit-content;\r\n}\r\n\r\n.form-añadir-tarea {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #64748b;\r\n    padding: 10px;\r\n}\r\n\r\ninput, label,\r\ntextarea {\r\n    display: block;\r\n    width: 100%;\r\n}\r\n\r\ninput {\r\n    height: 30px;\r\n}\r\n\r\ntextarea {\r\n    height: 90px;\r\n}\r\n\r\nbutton {\r\n    width: fit-content;\r\n    height: 30px;\r\n}\r\n\r\n.sidebar,\r\n.main-content,\r\n.contenedor-tareas {\r\n    padding: 50px;\r\n}\r\n\r\nli:hover {\r\n    cursor: pointer;\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;IAEI,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,iBAAiB;IACjB,sHAAsH;IACtH,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,cAAc;AAClB;;AAEA;IACI,yBAAyB;IACzB,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,yBAAyB;IACzB,aAAa;AACjB;;AAEA;;IAEI,cAAc;IACd,WAAW;AACf;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,YAAY;AAChB;;AAEA;;;IAGI,aAAa;AACjB;;AAEA;IACI,eAAe;AACnB",sourcesContent:["html,\r\nbody {\r\n    max-width: 100%;\r\n    overflow-x: hidden;\r\n}\r\n\r\n* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    font-size: 1.5rem;\r\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    background-color: #cbd5e1;\r\n}\r\n\r\nheader {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: start;\r\n    height: 15vh;\r\n    padding: 20px;\r\n}\r\n\r\n#contenido {\r\n    display: grid;\r\n    grid-template-columns: 20% 80%;\r\n    height: 79vh;\r\n    width: 100vw;\r\n}\r\n\r\nfooter {\r\n    height: 6vh;\r\n    font-size: 0.9rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\nheader, footer {\r\n    background-color: #1e293b;\r\n    color: #f8fafc;\r\n}\r\n\r\n.sidebar {\r\n    background-color: #64748b;\r\n}\r\n\r\n.total-tareas {\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n}\r\n\r\nul {\r\n    cursor: default;\r\n}\r\n\r\nul li {\r\n    list-style: none;\r\n    padding-left: 14px;\r\n}\r\n\r\n.main-content {\r\n    background-color: #cbd5e1;\r\n}\r\n\r\n.contenedor-tareas {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    overflow: auto;\r\n}\r\n\r\n.tareas {\r\n    background-color: #94a3b8;\r\n    height: fit-content;\r\n    cursor: pointer;\r\n}\r\n\r\n.btn-añadir-tarea {\r\n    width: fit-content;\r\n}\r\n\r\n.form-añadir-tarea {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #64748b;\r\n    padding: 10px;\r\n}\r\n\r\ninput, label,\r\ntextarea {\r\n    display: block;\r\n    width: 100%;\r\n}\r\n\r\ninput {\r\n    height: 30px;\r\n}\r\n\r\ntextarea {\r\n    height: 90px;\r\n}\r\n\r\nbutton {\r\n    width: fit-content;\r\n    height: 30px;\r\n}\r\n\r\n.sidebar,\r\n.main-content,\r\n.contenedor-tareas {\r\n    padding: 50px;\r\n}\r\n\r\nli:hover {\r\n    cursor: pointer;\r\n}"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},i=[],c=0;c<e.length;c++){var s=e[c],d=r.base?s[0]+r.base:s[0],l=o[d]||0,A="".concat(d," ").concat(l);o[d]=l+1;var u=t(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=a(p,r);r.byIndex=c,n.splice(c,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var c=t(o[i]);n[c].references--}for(var s=r(e,a),d=0;d<o.length;d++){var l=t(o[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),a=t.n(r),o=t(569),i=t.n(o),c=t(565),s=t.n(c),d=t(216),l=t.n(d),A=t(589),u=t.n(A),p=t(426),m={};m.styleTagTransform=u(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=l(),n()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;class f{constructor(e,n,t,r,a,o){this.titulo=e,this.detalles=n,this.finFecha=t,this.prioridad=r,this.id=a,this.posicion=o}}!function(){let e=JSON.parse(localStorage.getItem("proyectos"));null==e&&(e=[]);const n=document.querySelector("ul");let t=0;e.forEach((e=>{let r=document.createElement("li");n.appendChild(r),r.textContent=e,r.dataset.id=t,r.className="proyecto",t++}))}();const h=document.querySelector(".btn-añadirP"),C=document.querySelector(".btn-aceptar1"),g=document.querySelector(".btn-cancelar1"),y=document.querySelector(".form-proyecto");h.addEventListener("click",(()=>{y.hidden=!1,h.hidden=!0})),document.addEventListener("click",(function(e){const n=e.target;if(n.classList.contains("btn-aceptar")){const e=document.querySelector(".form-añadir-tarea");let t=e.elements[0].value,r=e.elements[1].value,a=e.elements[2].value,o=e.elements[3].value,i=new f(t,r,a,o,n.dataset.id),c=JSON.parse(localStorage.getItem("tareas"));null==c&&(c=[]),c.push(i);let s=c.length-1;i.posicion=s,localStorage.setItem("tareas",JSON.stringify(c))}})),document.addEventListener("click",(function(e){let n=e.target;if(n.classList.contains("borrar-tarea")){let e=JSON.parse(localStorage.getItem("tareas"));null==e&&(e=[]),e[n.dataset.posicion]="",localStorage.setItem("tareas",JSON.stringify(e))}})),document.addEventListener("click",(function(e){const n=e.target;if(n.classList.contains("proyecto")||n.classList.contains("btn-aceptar")||n.classList.contains("borrar-tarea")||n.classList.contains("total-tareas")){const e=document.querySelector(".contenedor-tareas"),t=document.querySelector("#contenido"),r=document.createElement("div");if(n.classList.contains("btn-aceptar")){const e=document.querySelector("h2");r.appendChild(e)}if(n.classList.contains("borrar-tarea")){const e=document.querySelector("h2");r.appendChild(e)}if(n.classList.contains("proyecto")){const e=document.createElement("h2");e.innerHTML=n.textContent,r.appendChild(e)}if(n.classList.contains("total-tareas")){const e=document.createElement("h2");e.innerHTML="Tareas",r.appendChild(e)}const a=document.createElement("button"),o=n.dataset.id,i=document.createElement("form"),c=document.createElement("label"),s=document.createElement("label"),d=document.createElement("label"),l=document.createElement("input"),A=document.createElement("textarea"),u=document.createElement("input"),p=document.createElement("button"),m=document.createElement("button"),f=document.createElement("div"),h=document.createElement("select");!function(e){const n=["Baja","Media","Alta"];for(let t=0;t<n.length;t++){const r=document.createElement("option");r.value=n[t],r.text=n[t],e.appendChild(r)}}(h),e.remove(),a.innerHTML="+ Añadir Tarea",c.textContent="Titulo:",s.textContent="Detalles:",d.textContent="Fecha:",p.textContent="Aceptar",m.textContent="Cancelar",t.appendChild(r),r.appendChild(a),r.appendChild(i),i.appendChild(c),i.appendChild(l),i.appendChild(s),i.appendChild(A),i.appendChild(d),i.appendChild(u),i.appendChild(h),i.appendChild(f),f.appendChild(p),f.appendChild(m),r.className="contenedor-tareas",a.className="btn-añadir-tarea",i.className="form-añadir-tarea",l.id="titulo-tarea",c.htmlFor=l.id,p.className="btn-aceptar",m.className="btn-cancelar";let C=document.querySelector(".contenedor-tareas");C.dataset.id=o,nom_proyecto.dataset.id=o,a.dataset.id=o,p.dataset.id=o,i.style.display="none",i.action="post",l.name="titulo-tarea",l.type="text",u.type="date",n.classList.contains("total-tareas")&&(a.remove(),C.dataset.id="tareas"),n.classList.contains("borrar-tarea")&&"tareas"===C.dataset.id&&(a.remove(),C.dataset.id="tareas")}})),document.addEventListener("click",(function(e){const n=e.target;let t=JSON.parse(localStorage.getItem("tareas"));null==t&&(t=[]);let r=document.querySelector(".contenedor-tareas");(n.classList.contains("proyecto")||n.classList.contains("btn-aceptar")||n.classList.contains("borrar-tarea")||n.classList.contains("total-tareas"))&&t.forEach((e=>{if((e.id===r.dataset.id||n.classList.contains("total-tareas")||"tareas"===n.dataset.id)&&""!==e){let t=document.createElement("div"),a=document.createElement("div");t.className="tareas",a.className="borrar-tarea";let o=document.createElement("div"),i=document.createElement("div"),c=document.createElement("div"),s=document.createElement("div");"Baja"===e.prioridad&&(s.style.backgroundColor="green"),"Media"===e.prioridad&&(s.style.backgroundColor="yellow"),"Alta"===e.prioridad&&(s.style.backgroundColor="red"),o.textContent=e.titulo,i.textContent=e.detalles,c.textContent=e.finFecha,s.textContent=e.prioridad,t.dataset.posicion=e.posicion,a.dataset.posicion=e.posicion,n.classList.contains("total-tareas")?a.dataset.id="tareas":a.dataset.id=e.id,a.textContent="Borrar",t.appendChild(o),t.appendChild(i),t.appendChild(c),t.appendChild(s),t.appendChild(a),r.appendChild(t)}})),console.log(t)})),document.addEventListener("click",(function(e){e.preventDefault();let n=e.target;const t=document.querySelector(".form-añadir-tarea");n.classList.contains("btn-añadir-tarea")&&(t.style.display="block")})),document.addEventListener("click",(function(e){e.preventDefault();let n=e.target;const t=document.querySelector(".form-añadir-tarea");n.classList.contains("btn-cancelar")&&(t.style.display="none")})),g.addEventListener("click",(function(e){e.preventDefault(),y.hidden=!0,h.hidden=!1,y.elements[0].value=""})),C.addEventListener("click",(function(e){e.preventDefault(),function(){let e=JSON.parse(localStorage.getItem("proyectos"));null==e&&(e=[]);const n=document.querySelector(".form-proyecto");let t=e.length-1;const r=document.querySelector("ul"),a=document.createElement("li");a.dataset.id=`${t+1}`,a.className="proyecto",a.textContent=n.elements[0].value,e.push(a.textContent),r.appendChild(a),localStorage.setItem("proyectos",JSON.stringify(e))}(),y.hidden=!0,h.hidden=!1,y.elements[0].value=""}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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R0FDNUNBLEVBQUUyRyxpQkFDRjNDLEVBQWNFLFFBQVMsRUFDdkIsRUFBV0EsUUFBUyxFQUNwQkYsRUFBY1MsU0FBUyxHQUFHQyxNQUFRLEVBQ3RDLElBRUFaLEVBQVlHLGlCQUFpQixTQUFTLFNBQVNqRSxHQUMzQ0EsRUFBRTJHLGlCRGpDQyxXQUVILElBQUl6RCxFQUFZL0YsS0FBS2dHLE1BQU1DLGFBQWFDLFFBQVEsY0FDaEMsTUFBYkgsSUFBbUJBLEVBQVksSUFFbEMsTUFBTWMsRUFBZ0J0RSxTQUFTQyxjQUFjLGtCQUM3QyxJQUFJa0YsRUFBYTNCLEVBQVVoSCxPQUFTLEVBQ3BDLE1BQU0wSyxFQUFjbEgsU0FBU0MsY0FBYyxNQUNyQzZELEVBQVc5RCxTQUFTVyxjQUFjLE1BRXhDbUQsRUFBU0csUUFBUXBJLEdBQUssR0FBR3NKLEVBQWEsSUFDdENyQixFQUFTSSxVQUFZLFdBRXJCSixFQUFTRSxZQUFjTSxFQUFjUyxTQUFTLEdBQUdDLE1BQ2pEeEIsRUFBVTdILEtBQUttSSxFQUFTRSxhQUV4QmtELEVBQVl6RyxZQUFZcUQsR0FFeEJKLGFBQWEwQixRQUFRLFlBQWEzSCxLQUFLQyxVQUFVOEYsR0FFckQsQ0NjSSxHQUNBYyxFQUFjRSxRQUFTLEVBQ3ZCLEVBQVdBLFFBQVMsRUFDcEJGLEVBQWNTLFNBQVMsR0FBR0MsTUFBUSxFQUN0QyxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGlzdGEtYWhhY2VyLy4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly9saXN0YS1haGFjZXIvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL2xpc3RhLWFoYWNlci8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL2xpc3RhLWFoYWNlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9saXN0YS1haGFjZXIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2xpc3RhLWFoYWNlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9saXN0YS1haGFjZXIvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vbGlzdGEtYWhhY2VyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vbGlzdGEtYWhhY2VyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vbGlzdGEtYWhhY2VyL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2xpc3RhLWFoYWNlci93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9saXN0YS1haGFjZXIvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2xpc3RhLWFoYWNlci93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2xpc3RhLWFoYWNlci93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vbGlzdGEtYWhhY2VyLy4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL2xpc3RhLWFoYWNlci8uL3NyYy90YXJlYXMuanMiLCJ3ZWJwYWNrOi8vbGlzdGEtYWhhY2VyLy4vc3JjL2HDsWFkaXJfcHJveWVjdG8uanMiLCJ3ZWJwYWNrOi8vbGlzdGEtYWhhY2VyLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiaHRtbCxcXHJcXG5ib2R5IHtcXHJcXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xcclxcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XFxyXFxufVxcclxcblxcclxcbioge1xcclxcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcclxcbiAgICBtYXJnaW46IDA7XFxyXFxuICAgIHBhZGRpbmc6IDA7XFxyXFxufVxcclxcblxcclxcbmJvZHkge1xcclxcbiAgICBoZWlnaHQ6IDEwMHZoO1xcclxcbiAgICB3aWR0aDogMTAwdnc7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xcclxcbiAgICBmb250LWZhbWlseTogJ0x1Y2lkYSBTYW5zJywgJ0x1Y2lkYSBTYW5zIFJlZ3VsYXInLCAnTHVjaWRhIEdyYW5kZScsICdMdWNpZGEgU2FucyBVbmljb2RlJywgR2VuZXZhLCBWZXJkYW5hLCBzYW5zLXNlcmlmO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2JkNWUxO1xcclxcbn1cXHJcXG5cXHJcXG5oZWFkZXIge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xcclxcbiAgICBoZWlnaHQ6IDE1dmg7XFxyXFxuICAgIHBhZGRpbmc6IDIwcHg7XFxyXFxufVxcclxcblxcclxcbiNjb250ZW5pZG8ge1xcclxcbiAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDIwJSA4MCU7XFxyXFxuICAgIGhlaWdodDogNzl2aDtcXHJcXG4gICAgd2lkdGg6IDEwMHZ3O1xcclxcbn1cXHJcXG5cXHJcXG5mb290ZXIge1xcclxcbiAgICBoZWlnaHQ6IDZ2aDtcXHJcXG4gICAgZm9udC1zaXplOiAwLjlyZW07XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbn1cXHJcXG5cXHJcXG5oZWFkZXIsIGZvb3RlciB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxZTI5M2I7XFxyXFxuICAgIGNvbG9yOiAjZjhmYWZjO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhciB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM2NDc0OGI7XFxyXFxufVxcclxcblxcclxcbi50b3RhbC10YXJlYXMge1xcclxcbiAgICBmb250LXdlaWdodDogYm9sZDtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG51bCB7XFxyXFxuICAgIGN1cnNvcjogZGVmYXVsdDtcXHJcXG59XFxyXFxuXFxyXFxudWwgbGkge1xcclxcbiAgICBsaXN0LXN0eWxlOiBub25lO1xcclxcbiAgICBwYWRkaW5nLWxlZnQ6IDE0cHg7XFxyXFxufVxcclxcblxcclxcbi5tYWluLWNvbnRlbnQge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2JkNWUxO1xcclxcbn1cXHJcXG5cXHJcXG4uY29udGVuZWRvci10YXJlYXMge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBnYXA6IDEwcHg7XFxyXFxuICAgIG92ZXJmbG93OiBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG4udGFyZWFzIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzk0YTNiODtcXHJcXG4gICAgaGVpZ2h0OiBmaXQtY29udGVudDtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG4uYnRuLWHDsWFkaXItdGFyZWEge1xcclxcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XFxyXFxufVxcclxcblxcclxcbi5mb3JtLWHDsWFkaXItdGFyZWEge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjQ3NDhiO1xcclxcbiAgICBwYWRkaW5nOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG5pbnB1dCwgbGFiZWwsXFxyXFxudGV4dGFyZWEge1xcclxcbiAgICBkaXNwbGF5OiBibG9jaztcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxufVxcclxcblxcclxcbmlucHV0IHtcXHJcXG4gICAgaGVpZ2h0OiAzMHB4O1xcclxcbn1cXHJcXG5cXHJcXG50ZXh0YXJlYSB7XFxyXFxuICAgIGhlaWdodDogOTBweDtcXHJcXG59XFxyXFxuXFxyXFxuYnV0dG9uIHtcXHJcXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xcclxcbiAgICBoZWlnaHQ6IDMwcHg7XFxyXFxufVxcclxcblxcclxcbi5zaWRlYmFyLFxcclxcbi5tYWluLWNvbnRlbnQsXFxyXFxuLmNvbnRlbmVkb3ItdGFyZWFzIHtcXHJcXG4gICAgcGFkZGluZzogNTBweDtcXHJcXG59XFxyXFxuXFxyXFxubGk6aG92ZXIge1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7O0lBRUksZUFBZTtJQUNmLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0QixTQUFTO0lBQ1QsVUFBVTtBQUNkOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsc0hBQXNIO0lBQ3RILHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixZQUFZO0lBQ1osWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsY0FBYztBQUNsQjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7SUFDVCxjQUFjO0FBQ2xCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLG1CQUFtQjtJQUNuQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0Qix5QkFBeUI7SUFDekIsYUFBYTtBQUNqQjs7QUFFQTs7SUFFSSxjQUFjO0lBQ2QsV0FBVztBQUNmOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsWUFBWTtBQUNoQjs7QUFFQTs7O0lBR0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiaHRtbCxcXHJcXG5ib2R5IHtcXHJcXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xcclxcbiAgICBvdmVyZmxvdy14OiBoaWRkZW47XFxyXFxufVxcclxcblxcclxcbioge1xcclxcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcclxcbiAgICBtYXJnaW46IDA7XFxyXFxuICAgIHBhZGRpbmc6IDA7XFxyXFxufVxcclxcblxcclxcbmJvZHkge1xcclxcbiAgICBoZWlnaHQ6IDEwMHZoO1xcclxcbiAgICB3aWR0aDogMTAwdnc7XFxyXFxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xcclxcbiAgICBmb250LWZhbWlseTogJ0x1Y2lkYSBTYW5zJywgJ0x1Y2lkYSBTYW5zIFJlZ3VsYXInLCAnTHVjaWRhIEdyYW5kZScsICdMdWNpZGEgU2FucyBVbmljb2RlJywgR2VuZXZhLCBWZXJkYW5hLCBzYW5zLXNlcmlmO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2JkNWUxO1xcclxcbn1cXHJcXG5cXHJcXG5oZWFkZXIge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHN0YXJ0O1xcclxcbiAgICBoZWlnaHQ6IDE1dmg7XFxyXFxuICAgIHBhZGRpbmc6IDIwcHg7XFxyXFxufVxcclxcblxcclxcbiNjb250ZW5pZG8ge1xcclxcbiAgICBkaXNwbGF5OiBncmlkO1xcclxcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDIwJSA4MCU7XFxyXFxuICAgIGhlaWdodDogNzl2aDtcXHJcXG4gICAgd2lkdGg6IDEwMHZ3O1xcclxcbn1cXHJcXG5cXHJcXG5mb290ZXIge1xcclxcbiAgICBoZWlnaHQ6IDZ2aDtcXHJcXG4gICAgZm9udC1zaXplOiAwLjlyZW07XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbn1cXHJcXG5cXHJcXG5oZWFkZXIsIGZvb3RlciB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxZTI5M2I7XFxyXFxuICAgIGNvbG9yOiAjZjhmYWZjO1xcclxcbn1cXHJcXG5cXHJcXG4uc2lkZWJhciB7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICM2NDc0OGI7XFxyXFxufVxcclxcblxcclxcbi50b3RhbC10YXJlYXMge1xcclxcbiAgICBmb250LXdlaWdodDogYm9sZDtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG51bCB7XFxyXFxuICAgIGN1cnNvcjogZGVmYXVsdDtcXHJcXG59XFxyXFxuXFxyXFxudWwgbGkge1xcclxcbiAgICBsaXN0LXN0eWxlOiBub25lO1xcclxcbiAgICBwYWRkaW5nLWxlZnQ6IDE0cHg7XFxyXFxufVxcclxcblxcclxcbi5tYWluLWNvbnRlbnQge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2JkNWUxO1xcclxcbn1cXHJcXG5cXHJcXG4uY29udGVuZWRvci10YXJlYXMge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBnYXA6IDEwcHg7XFxyXFxuICAgIG92ZXJmbG93OiBhdXRvO1xcclxcbn1cXHJcXG5cXHJcXG4udGFyZWFzIHtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzk0YTNiODtcXHJcXG4gICAgaGVpZ2h0OiBmaXQtY29udGVudDtcXHJcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcclxcbn1cXHJcXG5cXHJcXG4uYnRuLWHDsWFkaXItdGFyZWEge1xcclxcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XFxyXFxufVxcclxcblxcclxcbi5mb3JtLWHDsWFkaXItdGFyZWEge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjQ3NDhiO1xcclxcbiAgICBwYWRkaW5nOiAxMHB4O1xcclxcbn1cXHJcXG5cXHJcXG5pbnB1dCwgbGFiZWwsXFxyXFxudGV4dGFyZWEge1xcclxcbiAgICBkaXNwbGF5OiBibG9jaztcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxufVxcclxcblxcclxcbmlucHV0IHtcXHJcXG4gICAgaGVpZ2h0OiAzMHB4O1xcclxcbn1cXHJcXG5cXHJcXG50ZXh0YXJlYSB7XFxyXFxuICAgIGhlaWdodDogOTBweDtcXHJcXG59XFxyXFxuXFxyXFxuYnV0dG9uIHtcXHJcXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xcclxcbiAgICBoZWlnaHQ6IDMwcHg7XFxyXFxufVxcclxcblxcclxcbi5zaWRlYmFyLFxcclxcbi5tYWluLWNvbnRlbnQsXFxyXFxuLmNvbnRlbmVkb3ItdGFyZWFzIHtcXHJcXG4gICAgcGFkZGluZzogNTBweDtcXHJcXG59XFxyXFxuXFxyXFxubGk6aG92ZXIge1xcclxcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcblxuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG5cbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpOyAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG5cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG5cbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG5cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cblxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG5cbiAgY3NzICs9IG9iai5jc3M7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCB7IGHDsWFkaXJQcm95ZWN0b0VudG9ybm8gfSBmcm9tIFwiLi9hw7FhZGlyX3Byb3llY3RvXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUYXJlYXtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcih0aXR1bG8sIGRldGFsbGVzLCBmaW5GZWNoYSwgcHJpb3JpZGFkLCBpZCwgcG9zaWNpb24pe1xyXG5cclxuICAgICAgICB0aGlzLnRpdHVsbyA9IHRpdHVsbztcclxuICAgICAgICB0aGlzLmRldGFsbGVzID0gZGV0YWxsZXM7XHJcbiAgICAgICAgdGhpcy5maW5GZWNoYSA9IGZpbkZlY2hhO1xyXG4gICAgICAgIHRoaXMucHJpb3JpZGFkID0gcHJpb3JpZGFkO1xyXG4gICAgICAgIHRoaXMuaWQgPSBpZDtcclxuICAgICAgICB0aGlzLnBvc2ljaW9uID0gcG9zaWNpb247XHJcblxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGHDsWFkaXJUYXJlYShldmVudG8pIHtcclxuXHJcbiAgICBjb25zdCBlbGVtZW50byA9IGV2ZW50by50YXJnZXRcclxuXHJcbiAgICBpZiAoZWxlbWVudG8uY2xhc3NMaXN0LmNvbnRhaW5zKCdidG4tYWNlcHRhcicpKSB7XHJcblxyXG4gICAgICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybS1hw7FhZGlyLXRhcmVhJyk7XHJcbiAgICAgICAgbGV0IGlucHV0X3RpdHVsbyA9IGZvcm0uZWxlbWVudHNbMF0udmFsdWU7XHJcbiAgICAgICAgbGV0IGRldGFsbGVzID0gZm9ybS5lbGVtZW50c1sxXS52YWx1ZTtcclxuICAgICAgICBsZXQgZmluRmVjaGEgPSBmb3JtLmVsZW1lbnRzWzJdLnZhbHVlO1xyXG4gICAgICAgIGxldCBwcmlvcmlkYWQgPSBmb3JtLmVsZW1lbnRzWzNdLnZhbHVlO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGxldCB0YXJlYSA9IG5ldyBUYXJlYShpbnB1dF90aXR1bG8sIGRldGFsbGVzLCBmaW5GZWNoYSwgcHJpb3JpZGFkLCBlbGVtZW50by5kYXRhc2V0LmlkKVxyXG4gICAgICAgIGxldCB0YXJlYXMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0YXJlYXMnKSk7XHJcbiAgICAgICAgaWYodGFyZWFzID09IG51bGwpIHRhcmVhcyA9IFtdO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRhcmVhcy5wdXNoKHRhcmVhKTtcclxuICAgICAgICBsZXQgdWx0aW1vRWxlbSA9IHRhcmVhcy5sZW5ndGggLSAxO1xyXG4gICAgICAgIHRhcmVhLnBvc2ljaW9uID0gdWx0aW1vRWxlbTtcclxuXHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3RhcmVhcycsIEpTT04uc3RyaW5naWZ5KHRhcmVhcykpO1xyXG5cclxuICAgIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBsaXN0YXJUYXJlYXMoZXZlbnRvKSB7XHJcbiAgICBcclxuICAgIGNvbnN0IGVsZW1lbnRvID0gZXZlbnRvLnRhcmdldDtcclxuICAgIGxldCB0YXJlYXMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0YXJlYXMnKSk7XHJcbiAgICBpZih0YXJlYXMgPT0gbnVsbCkgdGFyZWFzID0gW107XHJcbiAgICBsZXQgY29udGVuaWRvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRlbmVkb3ItdGFyZWFzJyk7XHJcblxyXG4gICAgaWYgKGVsZW1lbnRvLmNsYXNzTGlzdC5jb250YWlucygncHJveWVjdG8nKSB8fCBlbGVtZW50by5jbGFzc0xpc3QuY29udGFpbnMoJ2J0bi1hY2VwdGFyJykgfHwgZWxlbWVudG8uY2xhc3NMaXN0LmNvbnRhaW5zKCdib3JyYXItdGFyZWEnKSB8fCBlbGVtZW50by5jbGFzc0xpc3QuY29udGFpbnMoJ3RvdGFsLXRhcmVhcycpKSB7XHJcblxyXG4gICAgICAgIHRhcmVhcy5mb3JFYWNoKHRhcmVhID0+IHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGlmICh0YXJlYS5pZCA9PT0gY29udGVuaWRvLmRhdGFzZXQuaWQgfHwgZWxlbWVudG8uY2xhc3NMaXN0LmNvbnRhaW5zKCd0b3RhbC10YXJlYXMnKSB8fCBlbGVtZW50by5kYXRhc2V0LmlkID09PSAndGFyZWFzJykge1xyXG5cclxuICAgICAgICAgICAgICAgIGlmICh0YXJlYSAhPT0gJycpIHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGRpdl90YXJlYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBib3JyYXJfdGFyZWEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgICAgICAgICAgICBkaXZfdGFyZWEuY2xhc3NOYW1lID0gJ3RhcmVhcyc7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9ycmFyX3RhcmVhLmNsYXNzTmFtZSA9ICdib3JyYXItdGFyZWEnO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCB0aXR1bG8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZGV0YWxsZXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZmVjaGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgcHJpb3JpZGFkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0YXJlYS5wcmlvcmlkYWQgPT09ICdCYWphJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmlvcmlkYWQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ2dyZWVuJ1xyXG4gICAgICAgICAgICAgICAgICAgIH0gaWYgKHRhcmVhLnByaW9yaWRhZCA9PT0gJ01lZGlhJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmlvcmlkYWQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3llbGxvdydcclxuICAgICAgICAgICAgICAgICAgICB9IGlmICh0YXJlYS5wcmlvcmlkYWQgPT09ICdBbHRhJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmlvcmlkYWQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3JlZCdcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIHRpdHVsby50ZXh0Q29udGVudCA9IHRhcmVhLnRpdHVsbztcclxuICAgICAgICAgICAgICAgICAgICBkZXRhbGxlcy50ZXh0Q29udGVudCA9IHRhcmVhLmRldGFsbGVzO1xyXG4gICAgICAgICAgICAgICAgICAgIGZlY2hhLnRleHRDb250ZW50ID0gdGFyZWEuZmluRmVjaGE7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJpb3JpZGFkLnRleHRDb250ZW50ID0gdGFyZWEucHJpb3JpZGFkO1xyXG4gICAgICAgICAgICAgICAgICAgIGRpdl90YXJlYS5kYXRhc2V0LnBvc2ljaW9uID0gdGFyZWEucG9zaWNpb247XHJcbiAgICAgICAgICAgICAgICAgICAgYm9ycmFyX3RhcmVhLmRhdGFzZXQucG9zaWNpb24gPSB0YXJlYS5wb3NpY2lvbjtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnRvLmNsYXNzTGlzdC5jb250YWlucygndG90YWwtdGFyZWFzJykpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYm9ycmFyX3RhcmVhLmRhdGFzZXQuaWQgPSAndGFyZWFzJztcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBib3JyYXJfdGFyZWEuZGF0YXNldC5pZCA9IHRhcmVhLmlkO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBib3JyYXJfdGFyZWEudGV4dENvbnRlbnQgPSAnQm9ycmFyJztcclxuICAgICAgICAgICAgICAgICAgICBkaXZfdGFyZWEuYXBwZW5kQ2hpbGQodGl0dWxvKTtcclxuICAgICAgICAgICAgICAgICAgICBkaXZfdGFyZWEuYXBwZW5kQ2hpbGQoZGV0YWxsZXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRpdl90YXJlYS5hcHBlbmRDaGlsZChmZWNoYSk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGl2X3RhcmVhLmFwcGVuZENoaWxkKHByaW9yaWRhZCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGl2X3RhcmVhLmFwcGVuZENoaWxkKGJvcnJhcl90YXJlYSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGVuaWRvLmFwcGVuZENoaWxkKGRpdl90YXJlYSk7XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgIH1cclxuY29uc29sZS5sb2codGFyZWFzKVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYm9ycmFyVGFyZWEoZXZlbnRvKSB7XHJcblxyXG4gICAgbGV0IGVsZW1lbnRvID0gZXZlbnRvLnRhcmdldFxyXG4gICAgXHJcbiAgICBpZiAoZWxlbWVudG8uY2xhc3NMaXN0LmNvbnRhaW5zKCdib3JyYXItdGFyZWEnKSkge1xyXG5cclxuICAgICAgICBsZXQgdGFyZWFzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndGFyZWFzJykpO1xyXG4gICAgICAgIGlmKHRhcmVhcyA9PSBudWxsKSB0YXJlYXMgPSBbXTtcclxuICAgICAgICBsZXQgcG9zaWNpb24gPSBlbGVtZW50by5kYXRhc2V0LnBvc2ljaW9uO1xyXG4gICAgICAgIHRhcmVhc1twb3NpY2lvbl0gPSAnJztcclxuXHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3RhcmVhcycsIEpTT04uc3RyaW5naWZ5KHRhcmVhcykpO1xyXG5cclxuICAgIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBtb3N0cmFyRm9ybVRhcmVhcyhldmVudG8pIHtcclxuICAgIFxyXG4gICAgZXZlbnRvLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBsZXQgZWxlbWVudG8gPSBldmVudG8udGFyZ2V0XHJcbiAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm0tYcOxYWRpci10YXJlYScpO1xyXG5cclxuICAgIGlmIChlbGVtZW50by5jbGFzc0xpc3QuY29udGFpbnMoJ2J0bi1hw7FhZGlyLXRhcmVhJykpIHtcclxuICAgICAgICBmb3JtLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG9jdWx0YXJGb3JtVGFyZWFzKGV2ZW50bykge1xyXG4gICAgXHJcbiAgICBldmVudG8ucHJldmVudERlZmF1bHQoKTtcclxuICAgIGxldCBlbGVtZW50byA9IGV2ZW50by50YXJnZXRcclxuICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybS1hw7FhZGlyLXRhcmVhJyk7XHJcbiAgICBcclxuICAgIGlmIChlbGVtZW50by5jbGFzc0xpc3QuY29udGFpbnMoJ2J0bi1jYW5jZWxhcicpKSB7XHJcbiAgICAgICAgZm9ybS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgfVxyXG5cclxufSIsImV4cG9ydCBmdW5jdGlvbiBhw7FhZGlyUHJveWVjdG8oKSB7XHJcblxyXG4gICAgbGV0IHByb3llY3RvcyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Byb3llY3RvcycpKTtcclxuICAgIGlmKHByb3llY3RvcyA9PSBudWxsKSBwcm95ZWN0b3MgPSBbXTtcclxuICAgIFxyXG4gICAgY29uc3QgZm9ybV9wcm95ZWN0byA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mb3JtLXByb3llY3RvJyk7XHJcbiAgICBsZXQgdWx0aW1vRWxlbSA9IHByb3llY3Rvcy5sZW5ndGggLSAxO1xyXG4gICAgY29uc3QgcHJveWVjdG9zVWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCd1bCcpO1xyXG4gICAgY29uc3QgcHJveWVjdG8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xyXG5cclxuICAgIHByb3llY3RvLmRhdGFzZXQuaWQgPSBgJHt1bHRpbW9FbGVtICsgMX1gO1xyXG4gICAgcHJveWVjdG8uY2xhc3NOYW1lID0gJ3Byb3llY3RvJztcclxuXHJcbiAgICBwcm95ZWN0by50ZXh0Q29udGVudCA9IGZvcm1fcHJveWVjdG8uZWxlbWVudHNbMF0udmFsdWU7XHJcbiAgICBwcm95ZWN0b3MucHVzaChwcm95ZWN0by50ZXh0Q29udGVudCk7XHJcblxyXG4gICAgcHJveWVjdG9zVWwuYXBwZW5kQ2hpbGQocHJveWVjdG8pO1xyXG5cclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdwcm95ZWN0b3MnLCBKU09OLnN0cmluZ2lmeShwcm95ZWN0b3MpKTtcclxuXHJcbn07XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYcOxYWRpclByb3llY3RvRW50b3JubyhldmVudG8pIHtcclxuXHJcbiAgICBjb25zdCBlbGVtZW50byA9IGV2ZW50by50YXJnZXRcclxuICAgIGlmIChlbGVtZW50by5jbGFzc0xpc3QuY29udGFpbnMoJ3Byb3llY3RvJykgfHwgZWxlbWVudG8uY2xhc3NMaXN0LmNvbnRhaW5zKCdidG4tYWNlcHRhcicpIHx8IGVsZW1lbnRvLmNsYXNzTGlzdC5jb250YWlucygnYm9ycmFyLXRhcmVhJykgfHwgZWxlbWVudG8uY2xhc3NMaXN0LmNvbnRhaW5zKCd0b3RhbC10YXJlYXMnKSApIHtcclxuXHJcbiAgICAgICAgY29uc3QgY29udGVuZWRvcl9hbnRlcmlvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW5lZG9yLXRhcmVhcycpO1xyXG4gICAgICAgIGNvbnN0IG1haW5fY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjb250ZW5pZG8nKTtcclxuICAgICAgICBjb25zdCBjb250ZW5lZG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblxyXG4gICAgICAgIGlmIChlbGVtZW50by5jbGFzc0xpc3QuY29udGFpbnMoJ2J0bi1hY2VwdGFyJykpIHsgXHJcblxyXG4gICAgICAgICAgICBjb25zdCBub21fcHJveWVjdG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoMicpO1xyXG4gICAgICAgICAgICBjb250ZW5lZG9yLmFwcGVuZENoaWxkKG5vbV9wcm95ZWN0byk7XHJcblxyXG4gICAgICAgIH0gaWYgKGVsZW1lbnRvLmNsYXNzTGlzdC5jb250YWlucygnYm9ycmFyLXRhcmVhJykpIHsgXHJcblxyXG4gICAgICAgICAgICBjb25zdCBub21fcHJveWVjdG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdoMicpO1xyXG4gICAgICAgICAgICBjb250ZW5lZG9yLmFwcGVuZENoaWxkKG5vbV9wcm95ZWN0byk7XHJcblxyXG4gICAgICAgIH0gIGlmIChlbGVtZW50by5jbGFzc0xpc3QuY29udGFpbnMoJ3Byb3llY3RvJykpIHtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IG5vbV9wcm95ZWN0byA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gyJyk7XHJcbiAgICAgICAgICAgIG5vbV9wcm95ZWN0by5pbm5lckhUTUwgPSBlbGVtZW50by50ZXh0Q29udGVudDtcclxuICAgICAgICAgICAgY29udGVuZWRvci5hcHBlbmRDaGlsZChub21fcHJveWVjdG8pO1xyXG5cclxuICAgICAgICB9IGlmIChlbGVtZW50by5jbGFzc0xpc3QuY29udGFpbnMoJ3RvdGFsLXRhcmVhcycpKSB7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBub21fcHJveWVjdG8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMicpO1xyXG4gICAgICAgICAgICBub21fcHJveWVjdG8uaW5uZXJIVE1MID0gJ1RhcmVhcyc7XHJcbiAgICAgICAgICAgIGNvbnRlbmVkb3IuYXBwZW5kQ2hpbGQobm9tX3Byb3llY3RvKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBidG5fYcOxYWRpcl90YXJlYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgICAgIGNvbnN0IGlkID0gZWxlbWVudG8uZGF0YXNldC5pZDtcclxuICAgICAgICBjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpO1xyXG4gICAgICAgIGNvbnN0IGxhYmVsX3RpdHVsbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XHJcbiAgICAgICAgY29uc3QgbGFiZWxfZGV0YWxsZXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xyXG4gICAgICAgIGNvbnN0IGxhYmVsX2ZlY2hhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcclxuICAgICAgICBjb25zdCBpbnB1dF90aXR1bG8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xyXG4gICAgICAgIGNvbnN0IGlucHV0X2RldGFsbGVzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGV4dGFyZWEnKTtcclxuICAgICAgICBjb25zdCBmZWNoYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XHJcbiAgICAgICAgY29uc3QgYnRuX2FjZXB0YXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgICAgICBjb25zdCBidG5fY2FuY2VsYXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgICAgICBjb25zdCBib3RvbmVzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgY29uc3QgcHJpb3JpZGFkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VsZWN0Jyk7XHJcblxyXG4gICAgICAgIGNyZWFyUHJpb3JpZGFkZXMocHJpb3JpZGFkKTtcclxuICAgICAgICBjb250ZW5lZG9yX2FudGVyaW9yLnJlbW92ZSgpO1xyXG5cclxuICAgICAgICBidG5fYcOxYWRpcl90YXJlYS5pbm5lckhUTUwgPSAnKyBBw7FhZGlyIFRhcmVhJztcclxuICAgICAgICBsYWJlbF90aXR1bG8udGV4dENvbnRlbnQgPSAnVGl0dWxvOic7XHJcbiAgICAgICAgbGFiZWxfZGV0YWxsZXMudGV4dENvbnRlbnQgPSAnRGV0YWxsZXM6JztcclxuICAgICAgICBsYWJlbF9mZWNoYS50ZXh0Q29udGVudCA9ICdGZWNoYTonO1xyXG4gICAgICAgIGJ0bl9hY2VwdGFyLnRleHRDb250ZW50ID0gJ0FjZXB0YXInO1xyXG4gICAgICAgIGJ0bl9jYW5jZWxhci50ZXh0Q29udGVudCA9ICdDYW5jZWxhcic7XHJcblxyXG4gICAgICAgIG1haW5fY29udGVudC5hcHBlbmRDaGlsZChjb250ZW5lZG9yKTtcclxuICAgICAgICBjb250ZW5lZG9yLmFwcGVuZENoaWxkKGJ0bl9hw7FhZGlyX3RhcmVhKTtcclxuICAgICAgICBjb250ZW5lZG9yLmFwcGVuZENoaWxkKGZvcm0pO1xyXG4gICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQobGFiZWxfdGl0dWxvKTtcclxuICAgICAgICBmb3JtLmFwcGVuZENoaWxkKGlucHV0X3RpdHVsbyk7XHJcbiAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChsYWJlbF9kZXRhbGxlcyk7XHJcbiAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChpbnB1dF9kZXRhbGxlcyk7XHJcbiAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChsYWJlbF9mZWNoYSk7XHJcbiAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChmZWNoYSk7XHJcbiAgICAgICAgZm9ybS5hcHBlbmRDaGlsZChwcmlvcmlkYWQpO1xyXG4gICAgICAgIGZvcm0uYXBwZW5kQ2hpbGQoYm90b25lcyk7XHJcbiAgICAgICAgYm90b25lcy5hcHBlbmRDaGlsZChidG5fYWNlcHRhcik7XHJcbiAgICAgICAgYm90b25lcy5hcHBlbmRDaGlsZChidG5fY2FuY2VsYXIpO1xyXG4gICAgICAgIGNvbnRlbmVkb3IuY2xhc3NOYW1lID0gJ2NvbnRlbmVkb3ItdGFyZWFzJztcclxuICAgICAgICBidG5fYcOxYWRpcl90YXJlYS5jbGFzc05hbWUgPSAnYnRuLWHDsWFkaXItdGFyZWEnO1xyXG4gICAgICAgIGZvcm0uY2xhc3NOYW1lID0gJ2Zvcm0tYcOxYWRpci10YXJlYSc7XHJcbiAgICAgICAgaW5wdXRfdGl0dWxvLmlkID0gJ3RpdHVsby10YXJlYSc7XHJcbiAgICAgICAgbGFiZWxfdGl0dWxvLmh0bWxGb3IgPSBpbnB1dF90aXR1bG8uaWQ7XHJcbiAgICAgICAgYnRuX2FjZXB0YXIuY2xhc3NOYW1lID0gJ2J0bi1hY2VwdGFyJztcclxuICAgICAgICBidG5fY2FuY2VsYXIuY2xhc3NOYW1lID0gJ2J0bi1jYW5jZWxhcic7XHJcblxyXG5cclxuICAgICAgICBsZXQgY29udGVuZWRvcl9udWV2byA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250ZW5lZG9yLXRhcmVhcycpXHJcbiAgICAgICAgY29udGVuZWRvcl9udWV2by5kYXRhc2V0LmlkID0gaWQ7XHJcbiAgICAgICAgbm9tX3Byb3llY3RvLmRhdGFzZXQuaWQgPSBpZDtcclxuICAgICAgICBidG5fYcOxYWRpcl90YXJlYS5kYXRhc2V0LmlkID0gaWQ7XHJcbiAgICAgICAgYnRuX2FjZXB0YXIuZGF0YXNldC5pZCA9IGlkO1xyXG4gICAgICAgIGZvcm0uc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuICAgICAgICBmb3JtLmFjdGlvbiA9ICdwb3N0J1xyXG4gICAgICAgIGlucHV0X3RpdHVsby5uYW1lID0gJ3RpdHVsby10YXJlYSc7XHJcbiAgICAgICAgaW5wdXRfdGl0dWxvLnR5cGUgPSAndGV4dCc7XHJcbiAgICAgICAgZmVjaGEudHlwZSA9ICdkYXRlJztcclxuXHJcbiAgICAgICAgaWYgKGVsZW1lbnRvLmNsYXNzTGlzdC5jb250YWlucygndG90YWwtdGFyZWFzJykpIHtcclxuXHJcbiAgICAgICAgICAgIGJ0bl9hw7FhZGlyX3RhcmVhLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICBjb250ZW5lZG9yX251ZXZvLmRhdGFzZXQuaWQgPSAndGFyZWFzJ1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChlbGVtZW50by5jbGFzc0xpc3QuY29udGFpbnMoJ2JvcnJhci10YXJlYScpICYmIGNvbnRlbmVkb3JfbnVldm8uZGF0YXNldC5pZCA9PT0gJ3RhcmVhcycpIHtcclxuXHJcbiAgICAgICAgICAgIGJ0bl9hw7FhZGlyX3RhcmVhLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICBjb250ZW5lZG9yX251ZXZvLmRhdGFzZXQuaWQgPSAndGFyZWFzJ1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxufTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBwb2JsYXJVbCgpIHtcclxuXHJcbiAgICBsZXQgcHJveWVjdG9zID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgncHJveWVjdG9zJykpO1xyXG4gICAgaWYocHJveWVjdG9zID09IG51bGwpIHByb3llY3RvcyA9IFtdO1xyXG4gICAgY29uc3QgZGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigndWwnKVxyXG5cclxuICAgIGxldCBpbmRleCA9IDA7XHJcbiAgICBwcm95ZWN0b3MuZm9yRWFjaChwcm95ZWN0byA9PiB7XHJcblxyXG4gICAgICAgIGxldCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJylcclxuICAgICAgICBkaXYuYXBwZW5kQ2hpbGQobGkpO1xyXG4gICAgICAgIGxpLnRleHRDb250ZW50ID0gcHJveWVjdG87XHJcbiAgICAgICAgbGkuZGF0YXNldC5pZCA9IGluZGV4O1xyXG4gICAgICAgIGxpLmNsYXNzTmFtZSA9ICdwcm95ZWN0byc7XHJcbiAgICAgICAgaW5kZXgrK1xyXG5cclxuICAgIH0pO1xyXG4gICAgXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNyZWFyUHJpb3JpZGFkZXMoZGF0YWxpc3QpIHtcclxuXHJcbiAgICBjb25zdCBwcmlvcmlkYWRlcyA9IFsnQmFqYScsICdNZWRpYScsICdBbHRhJ107XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwcmlvcmlkYWRlcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnN0IG9wY2lvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29wdGlvbicpO1xyXG4gICAgICAgIG9wY2lvbi52YWx1ZSA9IHByaW9yaWRhZGVzW2ldO1xyXG4gICAgICAgIG9wY2lvbi50ZXh0ID0gcHJpb3JpZGFkZXNbaV07XHJcbiAgICAgICAgXHJcbiAgICAgICAgZGF0YWxpc3QuYXBwZW5kQ2hpbGQob3BjaW9uKTtcclxuICAgIH1cclxuICAgIFxyXG59IiwiaW1wb3J0ICcuL3N0eWxlLmNzcyc7XHJcbmltcG9ydCB7YcOxYWRpclByb3llY3RvLCBhw7FhZGlyUHJveWVjdG9FbnRvcm5vLCBwb2JsYXJVbH0gZnJvbSAnLi9hw7FhZGlyX3Byb3llY3RvLmpzJztcclxuaW1wb3J0IHsgYcOxYWRpclRhcmVhLCBsaXN0YXJUYXJlYXMsIG1vc3RyYXJGb3JtVGFyZWFzLCBvY3VsdGFyRm9ybVRhcmVhcywgYm9ycmFyVGFyZWEgfSBmcm9tICcuL3RhcmVhcyc7XHJcblxyXG5wb2JsYXJVbCgpO1xyXG5cclxuY29uc3QgYnRuX2HDsWFkaXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYnRuLWHDsWFkaXJQJyk7XHJcbmNvbnN0IGJ0bl9hY2VwdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ0bi1hY2VwdGFyMScpO1xyXG5jb25zdCBidG5fY2FuY2VsYXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYnRuLWNhbmNlbGFyMScpO1xyXG5jb25zdCBmb3JtX3Byb3llY3RvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm0tcHJveWVjdG8nKTtcclxuXHJcbmJ0bl9hw7FhZGlyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4geyBmb3JtX3Byb3llY3RvLmhpZGRlbiA9IGZhbHNlOyAgYnRuX2HDsWFkaXIuaGlkZGVuID0gdHJ1ZTsgfSk7XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGHDsWFkaXJUYXJlYSk7XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGJvcnJhclRhcmVhKTtcclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYcOxYWRpclByb3llY3RvRW50b3Jubyk7XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGxpc3RhclRhcmVhcyk7XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG1vc3RyYXJGb3JtVGFyZWFzKTtcclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgb2N1bHRhckZvcm1UYXJlYXMpO1xyXG5cclxuYnRuX2NhbmNlbGFyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSkgeyBcclxuICAgIGUucHJldmVudERlZmF1bHQoKTsgXHJcbiAgICBmb3JtX3Byb3llY3RvLmhpZGRlbiA9IHRydWU7XHJcbiAgICBidG5fYcOxYWRpci5oaWRkZW4gPSBmYWxzZTtcclxuICAgIGZvcm1fcHJveWVjdG8uZWxlbWVudHNbMF0udmFsdWUgPSAnJztcclxufSk7XHJcblxyXG5idG5fYWNlcHRhci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpIHsgXHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7IFxyXG4gICAgYcOxYWRpclByb3llY3RvKCk7XHJcbiAgICBmb3JtX3Byb3llY3RvLmhpZGRlbiA9IHRydWU7XHJcbiAgICBidG5fYcOxYWRpci5oaWRkZW4gPSBmYWxzZTtcclxuICAgIGZvcm1fcHJveWVjdG8uZWxlbWVudHNbMF0udmFsdWUgPSAnJztcclxufSk7Il0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsIlRhcmVhIiwiY29uc3RydWN0b3IiLCJ0aXR1bG8iLCJkZXRhbGxlcyIsImZpbkZlY2hhIiwicHJpb3JpZGFkIiwicG9zaWNpb24iLCJwcm95ZWN0b3MiLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJkaXYiLCJmb3JFYWNoIiwicHJveWVjdG8iLCJsaSIsInRleHRDb250ZW50IiwiZGF0YXNldCIsImNsYXNzTmFtZSIsInBvYmxhclVsIiwiYnRuX2FjZXB0YXIiLCJidG5fY2FuY2VsYXIiLCJmb3JtX3Byb3llY3RvIiwiYWRkRXZlbnRMaXN0ZW5lciIsImhpZGRlbiIsImV2ZW50byIsImVsZW1lbnRvIiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJmb3JtIiwiaW5wdXRfdGl0dWxvIiwiZWxlbWVudHMiLCJ2YWx1ZSIsInRhcmVhIiwidGFyZWFzIiwidWx0aW1vRWxlbSIsInNldEl0ZW0iLCJjb250ZW5lZG9yX2FudGVyaW9yIiwibWFpbl9jb250ZW50IiwiY29udGVuZWRvciIsIm5vbV9wcm95ZWN0byIsImlubmVySFRNTCIsImxhYmVsX3RpdHVsbyIsImxhYmVsX2RldGFsbGVzIiwibGFiZWxfZmVjaGEiLCJpbnB1dF9kZXRhbGxlcyIsImZlY2hhIiwiYm90b25lcyIsImRhdGFsaXN0IiwicHJpb3JpZGFkZXMiLCJvcGNpb24iLCJ0ZXh0IiwiY3JlYXJQcmlvcmlkYWRlcyIsImh0bWxGb3IiLCJjb250ZW5lZG9yX251ZXZvIiwiZGlzcGxheSIsImFjdGlvbiIsIm5hbWUiLCJ0eXBlIiwiY29udGVuaWRvIiwiZGl2X3RhcmVhIiwiYm9ycmFyX3RhcmVhIiwiYmFja2dyb3VuZENvbG9yIiwiY29uc29sZSIsImxvZyIsInByZXZlbnREZWZhdWx0IiwicHJveWVjdG9zVWwiXSwic291cmNlUm9vdCI6IiJ9