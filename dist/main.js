(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(537),a=t.n(r),o=t(645),c=t.n(o)()(a());c.push([e.id,"html,\r\nbody {\r\n    max-width: 100%;\r\n    overflow-x: hidden;\r\n}\r\n\r\n* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    font-size: 1.5rem;\r\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    background-color: #cbd5e1;\r\n}\r\n\r\nheader {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: start;\r\n    height: 15vh;\r\n    padding: 20px;\r\n}\r\n\r\n#contenido {\r\n    display: grid;\r\n    grid-template-columns: 20% 80%;\r\n    height: 79vh;\r\n    width: 100vw;\r\n}\r\n\r\nfooter {\r\n    height: 6vh;\r\n    font-size: 0.9rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\nheader, footer {\r\n    background-color: #1e293b;\r\n    color: #f8fafc;\r\n}\r\n\r\n.sidebar {\r\n    background-color: #64748b;\r\n}\r\n\r\n.main-content {\r\n    background-color: #cbd5e1;\r\n}\r\n\r\n.contenedor-tareas {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    overflow: auto;\r\n}\r\n\r\n.tareas {\r\n    background-color: #94a3b8;\r\n    height: 120px;\r\n}\r\n\r\n.btn-añadir-tarea {\r\n    width: fit-content;\r\n}\r\n\r\n.form-añadir-tarea {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #64748b;\r\n    padding: 10px;\r\n}\r\n\r\ninput {\r\n    height: 30px;\r\n}\r\n\r\nbutton {\r\n    width: fit-content;\r\n    height: 30px;\r\n}\r\n\r\n.sidebar,\r\n.main-content,\r\n.contenedor-tareas {\r\n    padding: 50px;\r\n}\r\n\r\nli:hover {\r\n    cursor: pointer;\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;;IAEI,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,iBAAiB;IACjB,sHAAsH;IACtH,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,aAAa;IACb,mBAAmB;IACnB,uBAAuB;AAC3B;;AAEA;IACI,yBAAyB;IACzB,cAAc;AAClB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,cAAc;AAClB;;AAEA;IACI,yBAAyB;IACzB,aAAa;AACjB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,yBAAyB;IACzB,aAAa;AACjB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,kBAAkB;IAClB,YAAY;AAChB;;AAEA;;;IAGI,aAAa;AACjB;;AAEA;IACI,eAAe;AACnB",sourcesContent:["html,\r\nbody {\r\n    max-width: 100%;\r\n    overflow-x: hidden;\r\n}\r\n\r\n* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    font-size: 1.5rem;\r\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\r\n    background-color: #cbd5e1;\r\n}\r\n\r\nheader {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: start;\r\n    height: 15vh;\r\n    padding: 20px;\r\n}\r\n\r\n#contenido {\r\n    display: grid;\r\n    grid-template-columns: 20% 80%;\r\n    height: 79vh;\r\n    width: 100vw;\r\n}\r\n\r\nfooter {\r\n    height: 6vh;\r\n    font-size: 0.9rem;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\nheader, footer {\r\n    background-color: #1e293b;\r\n    color: #f8fafc;\r\n}\r\n\r\n.sidebar {\r\n    background-color: #64748b;\r\n}\r\n\r\n.main-content {\r\n    background-color: #cbd5e1;\r\n}\r\n\r\n.contenedor-tareas {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    overflow: auto;\r\n}\r\n\r\n.tareas {\r\n    background-color: #94a3b8;\r\n    height: 120px;\r\n}\r\n\r\n.btn-añadir-tarea {\r\n    width: fit-content;\r\n}\r\n\r\n.form-añadir-tarea {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #64748b;\r\n    padding: 10px;\r\n}\r\n\r\ninput {\r\n    height: 30px;\r\n}\r\n\r\nbutton {\r\n    width: fit-content;\r\n    height: 30px;\r\n}\r\n\r\n.sidebar,\r\n.main-content,\r\n.contenedor-tareas {\r\n    padding: 50px;\r\n}\r\n\r\nli:hover {\r\n    cursor: pointer;\r\n}"],sourceRoot:""}]);const i=c},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(c[d]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);r&&c[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},c=[],i=0;i<e.length;i++){var d=e[i],s=r.base?d[0]+r.base:d[0],l=o[s]||0,u="".concat(s," ").concat(l);o[s]=l+1;var A=t(u),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==A)n[A].references++,n[A].updater(p);else{var m=a(p,r);r.byIndex=i,n.splice(i,0,{identifier:u,updater:m,references:1})}c.push(u)}return c}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var c=0;c<o.length;c++){var i=t(o[c]);n[i].references--}for(var d=r(e,a),s=0;s<o.length;s++){var l=t(o[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=d}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),a=t.n(r),o=t(569),c=t.n(o),i=t(565),d=t.n(i),s=t(216),l=t.n(s),u=t(589),A=t.n(u),p=t(426),m={};function f(e){const n=e.target;if(n.classList.contains("proyecto")){const e=document.querySelector(".contenedor-tareas"),t=document.querySelector("#contenido"),r=document.createElement("div"),a=document.createElement("h2"),o=document.createElement("button"),c=n.dataset.id,i=document.createElement("form"),d=document.createElement("label"),s=document.createElement("input"),l=document.createElement("div"),u=document.createElement("button"),A=document.createElement("button"),p=document.createElement("div");e.remove(),a.innerHTML=n.textContent,o.innerHTML="+ Añadir Tarea",d.textContent="Titulo:",u.textContent="Aceptar",A.textContent="Cancelar",t.appendChild(r),r.appendChild(a),r.appendChild(o),r.appendChild(i),l.appendChild(d),l.appendChild(s),i.appendChild(l),i.appendChild(p),p.appendChild(u),p.appendChild(A),r.className="contenedor-tareas",o.className="btn-añadir-tarea",i.className="form-añadir-tarea",s.id="titulo-tarea",d.htmlFor=s.id,u.className="btn-aceptar",A.className="btn-cancelar",document.querySelector(".contenedor-tareas").dataset.id=c,a.dataset.id=c,o.dataset.id=c,u.dataset.id=c,i.style.display="none",i.action="post",s.name="titulo-tarea",s.type="text"}if(n.classList.contains("btn-aceptar")){const e=document.querySelector(".contenedor-tareas"),t=document.querySelector("#contenido"),r=document.createElement("div"),a=document.querySelector("h2"),o=document.createElement("button"),c=n.dataset.id;e.remove(),o.innerHTML="+ Añadir Tarea",t.appendChild(r),r.appendChild(a),r.appendChild(o),r.className="contenedor-tareas",o.className="btn-añadir-tarea",document.querySelector(".contenedor-tareas").dataset.id=c,a.dataset.id=c,o.dataset.id=c}}m.styleTagTransform=A(),m.setAttributes=d(),m.insert=c().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=l(),n()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;class h{constructor(e,n){this.titulo=e,this.id=n}}!function(){let e=JSON.parse(localStorage.getItem("proyectos"));null==e&&(e=[]);const n=document.querySelector("ul");let t=0;e.forEach((e=>{let r=document.createElement("li");n.appendChild(r),r.textContent=e,r.dataset.id=t,r.className="proyecto",t++}))}();const y=document.querySelector(".btn-añadirP"),v=document.querySelector(".btn-aceptar"),C=document.querySelector(".btn-cancelar"),g=document.querySelector(".form-proyecto");y.addEventListener("click",(()=>{g.hidden=!1,y.hidden=!0})),document.addEventListener("click",(function(e){const n=e.target;if(n.classList.contains("btn-aceptar")){let e=document.querySelector(".form-añadir-tarea").elements[0].value,t=new h(e,n.dataset.id),r=JSON.parse(localStorage.getItem("tareas"));null==r&&(r=[]),r.push(t),localStorage.setItem("tareas",JSON.stringify(r))}})),document.addEventListener("click",f),document.addEventListener("click",(function(e){f(e);const n=e.target;let t=JSON.parse(localStorage.getItem("tareas"));null==t&&(t=[]);let r=document.querySelector(".contenedor-tareas");(n.classList.contains("proyecto")||n.classList.contains("btn-aceptar"))&&(t.forEach((e=>{if(e.id===r.dataset.id){let n=document.createElement("div");n.className="tareas";let t=document.createElement("h4");t.textContent=e.titulo,n.appendChild(t),r.appendChild(n)}})),console.log(t))})),document.addEventListener("click",(function(e){e.preventDefault();let n=e.target;const t=document.querySelector(".form-añadir-tarea");n.classList.contains("btn-añadir-tarea")&&(t.style.display="block")})),document.addEventListener("click",(function(e){e.preventDefault();let n=e.target;const t=document.querySelector(".form-añadir-tarea");n.classList.contains("btn-cancelar")&&(t.style.display="none")})),C.addEventListener("click",(function(e){e.preventDefault(),g.hidden=!0,y.hidden=!1,g.elements[0].value=""})),v.addEventListener("click",(function(e){e.preventDefault(),function(){let e=JSON.parse(localStorage.getItem("proyectos"));null==e&&(e=[]);const n=document.querySelector(".form-proyecto");let t=e.length-1;const r=document.querySelector("ul"),a=document.createElement("li");a.dataset.id=`${t+1}`,a.className="proyecto",a.textContent=n.elements[0].value,e.push(a.textContent),r.appendChild(a),localStorage.setItem("proyectos",JSON.stringify(e))}(),g.hidden=!0,y.hidden=!1,g.elements[0].value=""}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,